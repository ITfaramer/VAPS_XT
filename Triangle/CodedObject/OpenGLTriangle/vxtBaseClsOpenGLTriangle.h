//=============================================================================
//
// Code generated by [VAPS XT 4.2.1]
//
//=============================================================================

#ifndef VXTBASECLSOPENGLTRIANGLE_H
#define VXTBASECLSOPENGLTRIANGLE_H


#ifndef VXTCLSOPENGLTRIANGLE_SPEC
  #if VXT_STATIC_LIB
    #define VXTCLSOPENGLTRIANGLE_SPEC
  #else
    #include "vxtExport.h"
    #ifdef VXT_STATIC_LIB_WITH_EXPORTS
      #define VXTCLSOPENGLTRIANGLE_SPEC VXT_EXPORT_SPEC
    #else
      #ifdef  VXTCLSOPENGLTRIANGLE_DLL
        #define VXTCLSOPENGLTRIANGLE_SPEC VXT_EXPORT_SPEC
      #else
        #define VXTCLSOPENGLTRIANGLE_SPEC VXT_IMPORT_SPEC
      #endif
    #endif
  #endif
#endif

//=============================================================================
//                        I N C L U D E   F I L E S
//=============================================================================

#include "vxtRTCodedGrObject.h"
#include "vxtRTMacros.h"
#include "vxtRTPropIdPath.h"
#include "vxtRTTopContext.h"
#include "vxtRTValue.h"
#include "vxtTypCoord.h"


//=============================================================================
//                                C L A S S
//=============================================================================

class VXTCLSOPENGLTRIANGLE_SPEC vxtBaseClsOpenGLTriangle : public vxtRTCodedGrObject
{
   
   
public:

#if VXT_CFG_DBG_ERROR_MESSAGE_SUPPORT || VXT_CFG_INTROSPECTION_SUPPORT
   static const vxtChar* const CLASS_NAME;
#endif
   
   // Property IDs
   static const vxtRTPropId POSITION_PROP   = vxtRTCodedGrObject::NUMBER_OF_PROPS;
   // NUMBER_OF_PROPS intentionally hides the base class constant with the same name.
   static const vxtRTPropId NUMBER_OF_PROPS = vxtRTCodedGrObject::NUMBER_OF_PROPS + 1U;


   struct InitData
   {
      vxtTypCoord::InitData   mp_Position;
   };

   
   virtual ~vxtBaseClsOpenGLTriangle();

   
#if VXT_CFG_SET_PROPERTY_SUPPORT
   virtual void vSetProperty(const vxtRTTopContext &a_rTopContext, const vxtRTPropIdPath &a_rIds, const vxtRTValue &a_rValue);
#endif

   
#if VXT_CFG_OBJECT_GET_PROPERTY_SUPPORT
   virtual vxtRTValue GetProperty(const vxtRTPropIdPath &a_rIds);
#endif

   
#if VXT_CFG_GET_POSITION_SUPPORT
   virtual void vGetPosition(vxtRCoord &a_rPos);
#endif

   
#if VXT_CFG_SET_POSITION_SUPPORT
   virtual void vSetPosition(const vxtRTTopContext &a_rTopContext, const vxtRCoord &a_rPos);
#endif

   const vxtTypCoord & rGetPositionProp() const
   {
      return mp_Position;
   }

   void vSetPositionProp(const vxtRTTopContext &a_rTopContext, const vxtRTPropIdPath &a_rIds, const vxtRTValue &a_rValue);

   void vSetPositionProp(const vxtRTTopContext &a_rTopContext, const vxtTypCoord & a_rPosition);

   
#if VXT_CFG_INTROSPECTION_SUPPORT
   static const vxtRTProperty *aGetPropInfo(vxtUShort &a_rNumProps);
#endif

   
#if VXT_CFG_DBG_ERROR_MESSAGE_SUPPORT || VXT_CFG_INTROSPECTION_SUPPORT
   virtual const vxtChar* pGetClassName() const;
#endif

   
#if VXT_EDITOR_MODE
   static const vxtChar* pGetDependentTypesDescriptor();
#endif

   
protected:

   explicit vxtBaseClsOpenGLTriangle(const InitData &a_rInitData);

   
   
   // PRQA S 2101 2
   
   vxtTypCoord mp_Position;

#if VXT_CFG_INTROSPECTION_SUPPORT
   virtual vxtUShort GetNumProps() const;
   virtual vxtRTProperty *aGetPropInfo();
   static vxtRTProperty S_PROPS[];
#endif

private:

   // Disallow copy
   vxtBaseClsOpenGLTriangle( const vxtBaseClsOpenGLTriangle& );
   vxtBaseClsOpenGLTriangle& operator=( const vxtBaseClsOpenGLTriangle& );

   
#if VXT_EDITOR_MODE
   static const vxtChar* s_pDependentTypesDescriptor;
#endif
};


#endif // VXTBASECLSOPENGLTRIANGLE_H

// END OF FILE

