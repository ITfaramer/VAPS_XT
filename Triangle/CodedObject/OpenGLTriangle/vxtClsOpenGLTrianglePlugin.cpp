//=============================================================================
//
// Code generated by [VAPS XT 4.2.1]
//
//=============================================================================

//=============================================================================
//                        I N C L U D E   F I L E S
//=============================================================================

#include "sqxObjPluginFactory.h"

#include "vxtClsOpenGLTrianglePlugin.h"

//==========<vxtClsOpenGLTrianglePlugin::vxtClsOpenGLTrianglePlugin>===========
// 
//  Summary: Constructor of the 'vxtClsOpenGLTrianglePlugin' class.
// 
//  Return Value: None.
// 
//=============================================================================
vxtClsOpenGLTrianglePlugin::vxtClsOpenGLTrianglePlugin(const vxtChar *a_pGUIName, vxtFloat a_Priority)
: sqxPlugin(a_pGUIName, a_Priority)
{
}

//==========<vxtClsOpenGLTrianglePlugin::~vxtClsOpenGLTrianglePlugin>==========
// 
//  Summary: Destructor of the 'vxtClsOpenGLTrianglePlugin' class.
// 
//  Return Value: None.
// 
//=============================================================================
vxtClsOpenGLTrianglePlugin::~vxtClsOpenGLTrianglePlugin()
{
}

//===============================<sqxPluginLoad>===============================
// 
//  Summary: The plugin load function, entry point to the plugin dll.
//           Creates a new plugin.
// 
//  Return Value: A pointer to the newly created plugin.
// 
//=============================================================================
sqxPlugin * sqxPluginLoad()
{
   return VXT_NEW(vxtClsOpenGLTrianglePlugin, (vxtClsOpenGLTriangle::CLASS_NAME, 1));
}

//========================<sqxPluginProductAPIVersion>=========================
// 
//  Summary: Retrieves the product API version.
// 
//  Return Value: The product API version string.
// 
//=============================================================================
const vxtChar * sqxPluginProductAPIVersion()
{
   return VXT_RT_PRODUCT_API_VERSION;
}

//==================<vxtClsOpenGLTrianglePlugin::Initialize>===================
// 
//  Summary: Called by the plugins loader to initialize the plugin.
// 
//  Return Value: VXT_TRUE or VXT_FALSE.
// 
//=============================================================================
vxtBool vxtClsOpenGLTrianglePlugin::Initialize(void* a_pContext)
{
   sqxObjPluginFactory *pFactory = static_cast<sqxObjPluginFactory *>(a_pContext);
   pFactory->SetCreateRTObjFcn(vxtClsOpenGLTrianglePlugin::s_pCreateRTObject);
   pFactory->SetDeleteRTObjFcn(vxtClsOpenGLTrianglePlugin::s_vDeleteRTObject);
   vxtUShort NumProps;
   const vxtRTProperty *pPropInfo = vxtClsOpenGLTriangle::aGetPropInfo(NumProps);
   pFactory->vSetPropInfo(pPropInfo, NumProps);
   const vxtChar *pDepTypeDescr = vxtClsOpenGLTriangle::pGetDependentTypesDescriptor();
   pFactory->vSetDependentTypesDescriptor(pDepTypeDescr);
   return VXT_TRUE;
}

//===================<vxtClsOpenGLTrianglePlugin::vCleanUp>====================
// 
//  Summary: Called by the plugins loader to clean up the plugin.
// 
//  Return Value: None.
// 
//=============================================================================
void vxtClsOpenGLTrianglePlugin::vCleanUp(void*)
{
}

//===============<vxtClsOpenGLTrianglePlugin::s_pCreateRTObject>===============
// 
//  Summary: Create a RunTime Built Object.
// 
//  Return Value: A pointer to the new RunTime Object.
// 
//=============================================================================
vxtRTObject * vxtClsOpenGLTrianglePlugin::s_pCreateRTObject(const void *a_pInitData)
{
   static const vxtBaseClsOpenGLTriangle::InitData s_DefaultProps  = {{0.0F, 0.0F}} ;
   const vxtBaseClsOpenGLTriangle::InitData *pInitData = VXT_NULL;

   if (VXT_NULL == a_pInitData)
   {
      pInitData = &s_DefaultProps;
   }
   else
   {
      pInitData = static_cast<const vxtBaseClsOpenGLTriangle::InitData*>(a_pInitData);
   }

   return VXT_NEW(vxtClsOpenGLTriangle, (*pInitData));
}

//===============<vxtClsOpenGLTrianglePlugin::s_vDeleteRTObject>===============
// 
//  Summary: Delete a RunTime Built Object.
// 
//  Return Value: None.
// 
//=============================================================================
void vxtClsOpenGLTrianglePlugin::s_vDeleteRTObject(vxtRTObject *a_pObject)
{
   VXT_DELETE(a_pObject);
}




// END OF FILE

