<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE object_implementation PUBLIC "-//PresagisCanada//DTD VapsXT 19.0" "file:///C:/VAPSXTDTD/VapsXT_19.dtd">

<object_implementation impl_name="SmallFrames" class="SmallFrames">
  <built_object_implementation>
    <model>
      <prop name="BkColor">stdBlack</prop>
      <prop name="DrawingUnit">Pixel</prop>
      <prop name="RulerUnits">Pixel</prop>
      <structprop name="Grid">
        <field name="Visible">FALSE</field>
        <field name="SubDivisions">2</field>
        <field name="Color">stdWhite</field>
        <structfield name="Snap">
          <field name="Enabled">FALSE</field>
          <field name="SensitivityPercent">50</field>
        </structfield>
      </structprop>
    </model>
    <state name="TopState" guid="9f402b70-c136-4157-a6f7-e6503e0817af">
      <model>
        <prop name="InheritFromInheritanceGroups">TRUE</prop>
        <prop name="UpdateChildrenOnlyIfActive">FALSE</prop>
      </model>
      <state name="Normal" guid="c350ec34-75e0-4f84-9e1c-8e16d82ca87b">
        <model>
          <prop name="InheritFromInheritanceGroups">TRUE</prop>
          <prop name="UpdateChildrenOnlyIfActive">FALSE</prop>
        </model>
      </state>
      <state name="Drag" guid="9031016b-75b3-4626-86db-d2808b49f4ff">
        <model>
          <prop name="InheritFromInheritanceGroups">TRUE</prop>
          <prop name="UpdateChildrenOnlyIfActive">FALSE</prop>
        </model>
      </state>
    </state>
    <object name="PosBeforeDrag" class="CoordData" guid="887fb94a-dace-4380-b1ac-1d8c9fc2b831">
      <model>
        <xyprop name="Value" x="0" y="0"/>
      </model>
    </object>
    <object name="RectActiveArea_1" class="RectActiveArea" guid="93a643a0-7b90-4394-bbfc-6dd85cc71848">
      <model>
        <prop name="IsVisible">TRUE</prop>
        <xyprop name="Point1" x="0" y="0"/>
        <xyprop name="Point2" x="320" y="320"/>
        <prop name="Enable">TRUE</prop>
        <prop name="EnableSingleTouch">TRUE</prop>
        <prop name="CaptureDrag">TRUE</prop>
        <prop name="ClipToArea">FALSE</prop>
        <prop name="CursorRepr">Default</prop>
      </model>
    </object>
    <object name="SimpleGroup_1" class="SimpleGroup" guid="79eb697f-c1cc-4662-aec2-acd30f834057">
      <model>
        <xyprop name="Position" x="0" y="0"/>
        <prop name="IsVisible">TRUE</prop>
        <prop name="Enable">TRUE</prop>
        <prop name="UpdateChildrenOnlyIfVisible">FALSE</prop>
      </model>
      <object name="MutuallyExclusiveGroup_1" class="MutuallyExclusiveGroup" guid="af29fdfc-c5d4-4df4-9cb1-1d6314973684">
        <model>
          <xyprop name="Position" x="0" y="0"/>
          <prop name="VisibleChild">0</prop>
          <prop name="NumChildren">3</prop>
          <prop name="ShowAllChildren">FALSE</prop>
          <prop name="UpdateVisibleChildOnly">FALSE</prop>
        </model>
        <object name="OneSmall_1" class="OneSmall" guid="721e4224-0edd-40af-a51a-a6e1407b1fac">
          <model>
            <xyprop name="Position" x="0" y="0"/>
            <prop name="IsVisible">TRUE</prop>
            <xyprop name="Size" x="0" y="0"/>
          </model>
        </object>
        <object name="TwoSmall_1" class="TwoSmall" guid="8bca3102-59f0-4808-9725-8f36975343ae">
          <model>
            <xyprop name="Position" x="0" y="0"/>
            <prop name="IsVisible">TRUE</prop>
            <xyprop name="Size" x="0" y="0"/>
          </model>
        </object>
        <object name="ThreeSmall_1" class="ThreeSmall" guid="2a35bf41-2db2-4132-98b0-43093274fdd6">
          <model>
            <xyprop name="Position" x="0" y="0"/>
            <prop name="IsVisible">TRUE</prop>
            <xyprop name="Size" x="0" y="0"/>
          </model>
        </object>
      </object>
    </object>
    <connections>
      <connection src="IfElse(OneSmall_1.Size.X == 0,320,OneSmall_1.Size.X)" dest="RectActiveArea_1.Point2.X"/>
      <connection src="IfElse(OneSmall_1.Size.Y == 0,320,OneSmall_1.Size.Y)" dest="RectActiveArea_1.Point2.Y"/>
      <connection src=".LayoutStatus.CurModulePara.Module" dest="MutuallyExclusiveGroup_1.VisibleChild"/>
    </connections>
    <transitions>
      <default_transition state="TopState" default="Normal"/>
      <transition name="Transition_1" src="Normal" trigger="RectActiveArea_1.evPress(e)" target="Drag">
        <actions>PosBeforeDrag.Value=e;</actions>
      </transition>
      <transition name="" src="Drag" trigger="RectActiveArea_1.evDrag(e)">
        <actions>SimpleGroup_1.Position.X = e.X - PosBeforeDrag.Value.X;
SimpleGroup_1.Position.Y = e.Y - PosBeforeDrag.Value.Y;</actions>
      </transition>
      <transition name="Transition_2" src="Drag" trigger="RectActiveArea_1.evRelease(e)" target="Normal">
        <actions>SimpleGroup_1.Position.X=0;
SimpleGroup_1.Position.Y=0;

var s type UShort = .LayoutFromLayout.ValidCount;

for i up from 0 count s{
    if(
    (e.X + .Position.X &gt;= .LayoutFromLayout.Lay[i].PositionX) &amp;&amp;
    (e.X + .Position.X &lt;= .LayoutFromLayout.Lay[i].PositionX + .LayoutFromLayout.Lay[i].SizeX) &amp;&amp;
    (e.Y + .Position.Y &gt;= .LayoutFromLayout.Lay[i].PositionY) &amp;&amp;
    (e.Y + .Position.Y &lt;= .LayoutFromLayout.Lay[i].PositionY + .LayoutFromLayout.Lay[i].SizeY)
    ){
    //.PostError(0,ConcatStrings(&quot;swap id is= &quot;,i));
    //old-&gt;new
    .evSwapFrame(.LayoutStatus.FrameID,i);
    }//if
}//for</actions>
      </transition>
    </transitions>
    <statechart_layout>
      <scl_object name="Drag" class="SCS:State" guid="725f1c02-cb2c-451c-9d95-0da71330536e">
        <model>
          <xyprop name="Point1" x="475" y="288"/>
          <xyprop name="Point2" x="629" y="187"/>
          <xyprop name="ClipState" x="619" y="250.25"/>
          <prop name="IsClipSet">0</prop>
          <xyprop name="ClipPreviewImages" x="619" y="197"/>
          <prop name="IsClipPreviewImagesSet">0</prop>
        </model>
        <incominglinks/>
      </scl_object>
      <scl_object name="Normal" class="SCS:State" guid="bb345bb7-a4b0-496f-a08b-b7e38e7fb0cd">
        <model>
          <xyprop name="Point1" x="159" y="197"/>
          <xyprop name="Point2" x="58" y="291"/>
          <xyprop name="ClipState" x="149" y="255"/>
          <prop name="IsClipSet">0</prop>
          <xyprop name="ClipPreviewImages" x="149" y="207"/>
          <prop name="IsClipPreviewImagesSet">0</prop>
        </model>
        <incominglinks/>
      </scl_object>
      <scl_object name="InitialTransition_1" class="SCS:InitialTransition" guid="e894b884-c690-410f-b9a0-87c78a565eef">
        <model>
          <xyprop name="Point1" x="4" y="243"/>
          <xyprop name="Point2" x="58" y="252"/>
        </model>
      </scl_object>
      <scl_object name="Transition_1" class="SCS:Transition" guid="b39a5073-f951-4d9a-90e2-1f742bb3b77d">
        <model>
          <xyprop name="Point1" x="159" y="265"/>
          <xyprop name="Point2" x="475" y="268"/>
          <xyprop name="Ctrl1" x="238" y="265.75"/>
          <xyprop name="Ctrl2" x="396" y="267.25"/>
          <xyprop name="Origin" x="317" y="266.5"/>
          <xyprop name="ClipTransition" x="337" y="246.5"/>
          <prop name="IsClipSet">0</prop>
          <prop name="InformalText"></prop>
        </model>
      </scl_object>
      <scl_object name="Transition_2" class="SCS:Transition" guid="afcfe7e4-2a4f-4786-b58d-44cada58a408">
        <model>
          <xyprop name="Point1" x="475" y="208"/>
          <xyprop name="Point2" x="159" y="225"/>
          <xyprop name="Ctrl1" x="396" y="212.25"/>
          <xyprop name="Ctrl2" x="238" y="220.75"/>
          <xyprop name="Origin" x="317" y="216.5"/>
          <xyprop name="ClipTransition" x="337" y="196.5"/>
          <prop name="IsClipSet">0</prop>
          <prop name="InformalText"></prop>
        </model>
      </scl_object>
    </statechart_layout>
  </built_object_implementation>
</object_implementation>
